plugins {
    id 'java'
}

group = 'net.keinepixel'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "infernalsuite"
        url = "https://repo.infernalsuite.com/repository/maven-snapshots/"
    }
    maven {
        name = "rapture"
        url = "https://repo.rapture.pw/repository/maven-releases/"
    }
    maven {
        name = "koboo-reposilite"
        url = "https://reposilite.koboo.eu/releases/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly "net.keinepixel:api-spigot:${pixelAPI}"

    compileOnly "io.papermc.paper:paper-api:${paper}"
    compileOnly "com.infernalsuite.aswm:api:${slimeWorldManager}"

    compileOnly "eu.koboo.atcommand:core:${at_Command}"
    compileOnly "eu.koboo.atcommand:platform-spigot:${at_Command}"

    implementation "eu.koboo.en2do:en2do:${en2do}"
    implementation "org.reflections:reflections:${reflections}"

    compileOnly "org.projectlombok:lombok:${lombok}"
    annotationProcessor "org.projectlombok:lombok:${lombok}"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
